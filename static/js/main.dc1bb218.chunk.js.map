{"version":3,"sources":["logo.svg","controls.js","addPlayer.js","waitingList.js","smoothNoise.js","battlefield.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Controls","this","props","player","className","for","name","health","type","value","angle","onClick","turnLeft","turnRight","power","lessPower","morePower","id","fire","React","Component","AddPlayer","state","update","e","setState","target","add","addPlayer","onChange","WaitingList","list","map","Random","seed","_seed","prototype","next","nextFloat","opt_minOrMax","opt_max","smoothNoise","frequency","subDivision","highLimit","lowLimit","lastPos","x","y","points","width","window","innerWidth","randomNumber","min","max","Math","floor","random","Cosine_Interpolate","a","b","ft","f","cos","fill","length","i","subPoints","j","push","nextX","nextY","t","sub_x","sub_y","RAD","PI","Battlefield","createHeightMap","noise","innerHeight","cnv","offsetWidth","controller","paintStage","getStartingPosition","cannonball","height","offsetHeight","c","ctx","fillStyle","fillRect","beginPath","moveTo","last","forEach","point","lineTo","closePath","arc","angleCorrected","linex","liney","sin","stroke","rx","round","ry","px","cachedCtx","getImageData","data","document","getElementById","getContext","cachedMap","OffscreenCanvas","drawImage","Array","GRAV","App","currentPlayer","newPlayer","Object","assign","forceUpdate","time","startX","startY","Promise","resolve","timer","setInterval","pow","requestAnimationFrame","clearTimeout","componentDidUpdate","current","others","filter","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc1bb218.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\n\nclass Controls extends React.Component {\n  render(){\n    if ( ! this.props.player ) return null;\n    return (\n      <div className=\"Controls\">\n        <label for=\"Name\">Name</label><span className=\"Name\">{this.props.player.name}</span>\n        <label for=\"Health\">Health</label><span className=\"Health\">{this.props.player.health}</span>\n        <label for=\"Angle\">Angle</label>\n          <span className=\"Angle\">\n            <input type=\"number\" className=\"Angle\" value={this.props.player.angle}/>\n            <button onClick={this.props.turnLeft}>&lt;</button>\n            <button onClick={this.props.turnRight}>&gt;</button>\n          </span>\n        <label for=\"Power\">Power</label>\n        <span className=\"Power\">\n        <input type=\"number\" className=\"Angle\" value={this.props.player.power}/>\n          <button onClick={this.props.lessPower}>-</button>\n          <button onClick={this.props.morePower}>+</button>\n        </span>\n        <button id=\"fire\" onClick={this.props.fire}>Fire</button>\n      </div>\n    );\n  }\n}\n\nexport default Controls;\n","import React from 'react';\n\nclass AddPlayer extends React.Component {\n  state = {name:\"\"};\n\n  update = (e) => {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  add = ()=>{\n    this.props.addPlayer(this.state.name)\n    this.setState({name:\"\"});\n  }\n\n  render(){\n    return (\n      <div className=\"AddPlayer\">\n        <input id=\"name\" onChange={this.update} />\n        <button onClick={this.add}>Add Player</button>\n      </div> );\n  }\n}\n\nexport default AddPlayer;\n","import React from 'react';\n\nclass WaitingList extends React.Component {\n  state = {name: \"\"}\n\n  update = (e) => {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  add = ()=>{\n    this.props.addPlayer(this.state.name)\n  }\n\n  render(){ return this.props.list.map( (player)=> {\n    return (\n    <div className=\"WaitingPlayer\">\n      {player.name} <span className=\"Health\">{player.health}</span>\n    </div> );\n  } ); }\n}\n\nexport default WaitingList;\n","// SmoothNoise script\n// ver: 0.1\n// markusT inkfood.com\n// https://github.com/inkfood/smoothNoiseJS/blob/master/lib/smoothNoise.js\n\nfunction Random(seed) {\n  this._seed = seed % 2147483647;\n  if (this._seed <= 0) this._seed += 2147483646;\n}\n\nRandom.prototype.next = function () {\n  return this._seed = this._seed * 16807 % 2147483647;\n};\n\nRandom.prototype.nextFloat = function (opt_minOrMax, opt_max) {\n  return (this.next() - 1) / 2147483646;\n};\n\nvar smoothNoise = function ()\n{\n    this.frequency = 10;\n    this.subDivision = 10;\n    this.highLimit = 300;\n    this.lowLimit = 500;\n    this.lastPos = {x:0,y:0};\n    this.points = [];\n    this.width = window.innerWidth;\n}\n\nsmoothNoise.prototype.fill = function()\n{\n    var points = [];\n\n    this.lastPos = {x:this.lastPos.x,y:randomNumber(this.lowLimit,this.highLimit)};\n\n    //PRE DEFINED POINTS\n    if(this.points.length > 0)\n    {\n        this.lastPos = {x:0,y:this.points[0][1]}\n        for (let i = 0; i < this.frequency; i++)\n        {\n            let subPoints = this.add(null,this.points[i][1]);\n\n            for (let j = 0; j < subPoints.length; j++)\n            {\n                    points.push(subPoints[j])\n            }\n        }\n    }\n    //DYNAMIC POINTS\n    else\n    {\n\n        for (var i = 0; i < this.frequency; i++)\n        {\n            var subPoints = this.add();\n\n            for (var j = 0; j < subPoints.length; j++)\n            {\n                points.push(subPoints[j])\n            }\n        }\n\n    }\n\n    return points;\n}\n\nsmoothNoise.prototype.add = function(nextX,nextY)\n{   let x,y;\n    if(nextX){x = nextX}//PRE DEFINED POINTS\n    else {x = (this.lastPos.x + (this.width/(this.frequency)));}//DYNAMIC POINTS\n\n    if(nextY){y = nextY}//PRE DEFINED POINTS\n    else {y = randomNumber(this.lowLimit,this.highLimit);}//DYNAMIC POINTS\n\n\n    let subPoints = [];\n\n    for (var i = 0; i < this.subDivision; i++)\n    {\n        var t = i/this.subDivision;\n\n        var sub_x = (((x-this.lastPos.x)/this.subDivision)*(i))+this.lastPos.x;\n\n        var sub_y = Cosine_Interpolate(this.lastPos.y, y, t);\n\n        subPoints.push({x:sub_x,y:sub_y})\n    }\n\n    this.lastPos = {x:x,y:y};\n\n    return subPoints;\n}\n\nfunction randomNumber(min,max)\n{\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction Cosine_Interpolate(a, b, x)\n{\n\tvar ft = x * 3.1415927 //MATH PI\n\tvar f = (1 - Math.cos(ft)) * .5\n\n\treturn  a*(1-f) + b*f\n}\n\nexport default smoothNoise;\n","import React from 'react';\nimport smoothNoise from './smoothNoise.js'\n\nconst RAD = Math.PI / 180;\n\nclass Battlefield extends React.Component {\n\n  componentDidMount(){\n    this.cnv = document.getElementById('stage');\n    this.cnv.width = window.innerWidth;\n    this.cnv.height = window.innerHeight;\n    this.ctx = this.cnv.getContext('2d');\n    this.createHeightMap();\n    this.paintStage();\n    this.cachedMap = new OffscreenCanvas( this.cnv.width, this.cnv.height );\n    this.cachedCtx = this.cachedMap.getContext('2d');\n    this.cachedCtx.drawImage(this.cnv,0,0);\n  }\n\n  createHeightMap = ()=> {\n    this.noise = new smoothNoise();\n    this.noise.frequency = 10;\n    this.noise.subDivision = 10;\n    this.noise.highLimit = window.innerHeight / 3;\n    this.noise.lowLimit = 20;\n    this.noise.lastPos = {x:0,y:0};\n    this.noise.width = this.cnv.offsetWidth;\n    this.map = this.noise.fill();\n    this.props.controller.paintStage = this.paintStage;\n    this.props.controller.getStartingPosition = () => {\n      return this.map.random()\n    }\n  }\n\n  paintStage = (cannonball=false) => {\n    let width  = this.cnv.offsetWidth;\n    let height = this.cnv.offsetHeight;\n    let c = this.ctx;\n    c.fillStyle = '#00f';\n    c.fillRect(0,0,width,height);\n    c.fillStyle = '#0f0';\n    c.beginPath();\n    c.moveTo(0, height);\n    let last = null;\n    this.map.forEach( (point) => {\n      last = point;\n      c.lineTo( point.x, height - point.y );\n    })\n    c.lineTo( width, height - last.y );\n    c.lineTo(width,height);\n    c.lineTo(0,height);\n    c.closePath();\n    c.fill();\n    c.fillStyle = '#f00';\n    this.props.controller.state.player.forEach( (player) => {\n      c.beginPath();\n      c.arc( player.x, height - player.y, 10, 0, 2 * Math.PI );\n      c.fill();\n      c.beginPath();\n      c.moveTo( player.x, height - player.y );\n      let angleCorrected = ( 360 + 360 - player.angle ) % 360;\n      let linex = Math.cos(angleCorrected*RAD)*12;\n      let liney = Math.sin(angleCorrected*RAD)*12;\n      c.lineTo( player.x + linex, height - player.y + liney );\n      c.stroke();\n    });\n    if ( cannonball ){\n      c.fillStyle = '#000';\n      c.beginPath();\n      c.arc( cannonball.x, height - cannonball.y, 3, 0, 2 * Math.PI );\n      c.fill();\n      let rx = Math.round(cannonball.x);\n      let ry = Math.round(cannonball.y);\n      let px = this.cachedCtx.getImageData(rx,height-ry,1,1).data;\n      if ( px[0] == 0 && px[1] == 255 && px[2] == 0 && px[3] == 255 ){\n        return true;\n      }\n      if ( cannonball.x < 0 || cannonball.x > width || cannonball.y < 0 ){\n        return true;\n      }\n    }\n    return false;\n  }\n\n  render(){\n    return (\n      <div className=\"Battlefield\">\n        <canvas id=\"stage\"/>\n      </div>\n    );\n  }\n}\n\nexport default Battlefield;\n","/*\n  CannonFudderJS\n\n  (c) 2019 Sebastian Glaser\n  (c) 2019 DCI Digital Career Institute\n\n  ReactJS example to illustrate various aspects\n  of using react in the wild.\n*/\n\nimport './App.css';\nimport logo        from './logo.svg';\nimport React       from 'react';\nimport Controls    from './controls.js'\nimport AddPlayer   from './addPlayer.js'\nimport Waiting     from './waitingList.js'\nimport Battlefield from './battlefield.js'\n\nArray.prototype.random = function (){\n  return this[Math.floor(Math.random()*this.length)];\n}\n\nconst GRAV = 9.81;\nconst RAD  = Math.PI / 180;\n\nclass App extends React.Component {\n\n  state = {\n    player:[],\n    currentPlayer:null\n  }\n\n  addPlayer = (name)=> {\n    let newPlayer = {\n      name:name,\n      health:100,\n      points:0,\n      angle:45,\n      power:100\n    };\n    Object.assign(newPlayer,this.getStartingPosition());\n    this.state.player.push( newPlayer );\n    this.state.currentPlayer = this.state.currentPlayer || newPlayer;\n    this.forceUpdate()\n  }\n\n  turnLeft = ()=> {\n    if ( ! this.state.currentPlayer ) return;\n    this.state.currentPlayer.angle -= 5;\n    this.forceUpdate()\n  }\n\n  turnRight = ()=> {\n    if ( ! this.state.currentPlayer ) return;\n    this.state.currentPlayer.angle += 5;\n    this.forceUpdate()\n  }\n\n  lessPower = ()=> {\n    if ( ! this.state.currentPlayer ) return;\n    this.state.currentPlayer.power -= 5;\n    this.forceUpdate()\n  }\n\n  morePower = ()=> {\n    if ( ! this.state.currentPlayer ) return;\n    this.state.currentPlayer.power += 5;\n    this.forceUpdate()\n  }\n\n  fire = async ()=> {\n    if ( ! this.state.currentPlayer ) return;\n    let time = 0;\n    let player = this.state.currentPlayer;\n    let angleCorrected = ( 360 + 360 - player.angle ) % 360;\n    let startX = player.x + Math.cos(angleCorrected*RAD)*6;\n    let startY = player.y - Math.sin(angleCorrected*RAD)*6;\n    let cannonball = {\n      x: startX,\n      y: startY\n    }\n    await new Promise( (resolve)=> {\n      let timer = setInterval( () => {\n        time += 0.033;\n        cannonball.x = startX + ( player.power * time * Math.cos( player.angle * RAD ));\n        cannonball.y = startY + ( player.power * time * Math.sin( player.angle * RAD )) - ( GRAV * Math.pow(time,2) / 2);\n        requestAnimationFrame(()=>{\n          if ( this.paintStage(cannonball) ){\n            clearTimeout(timer);\n            resolve();\n          }\n        });\n      }, 16);\n    });\n  }\n\n  componentDidUpdate = () => {\n    this.paintStage(false)\n  }\n\n  render(){\n    window.App = this;\n    let current = this.state.currentPlayer;\n    let others = this.state.player.filter( (player) => { return player !== current });\n    return (\n      <div className=\"App\">\n        <div className=\"Header\">\n        </div>\n        <Controls\n          player={current}\n          turnLeft={this.turnLeft}\n          turnRight={this.turnRight}\n          lessPower={this.lessPower}\n          morePower={this.morePower}\n          fire={this.fire}\n        />\n        <div className=\"WaitingPlayers\">\n          <Waiting list={others} />\n        </div>\n        <div className=\"Settings\">\n          <AddPlayer addPlayer={this.addPlayer}/>\n          <button>Restart Game</button>\n        </div>\n        <Battlefield controller={this}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}